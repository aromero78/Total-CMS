//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataObjects", "UsersContentItems", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Users), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "UsersContentItems1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Users), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "UsersToUserRolesUsers", "UsersToUserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.UsersToUserRoles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Users), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "FoldersContentItems", "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "LanguagesUsers", "Languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Languages), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Users), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "LanguagesFolders", "Languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Languages), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Folders))]
[assembly: EdmRelationshipAttribute("DataObjects", "CalendarsFolders", "Calendars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Calendars), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "CalendarsCalendarEvents", "Calendars", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Calendars), "CalendarEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.CalendarEvents), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MenusFolders", "Menus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Menus), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MenuItemsMenus", "MenuItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MenuItems), "Menus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Menus), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "LibraryItemsFolders", "LibraryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.LibraryItems), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "UsersToUserRolesUserRoles", "UsersToUserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.UsersToUserRoles), "UserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.UserRoles), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "AdminElementAdminPages", "AdminElement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.TemplateElement), "AdminPages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Templates), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "AdminElementAttributesAdminElement", "AdminElementAttributes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.TemplateElementAttributes), "AdminElement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.TemplateElement))]
[assembly: EdmRelationshipAttribute("DataObjects", "PagesAliases", "Pages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Templates), "Aliases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Aliases), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "ChildFolders", "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), "Folders1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "PermissionsUserRoles", "Permissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Permissions), "UserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.UserRoles), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MenuItemsAliases", "MenuItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MenuItems), "Aliases", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Aliases), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "PermissionsFolders", "Permissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Permissions), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MetaDataTypeToFolderFolders", "MetaDataTypeToFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MetaDataTypeToFolder), "Folders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Folders), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MetaDataTypeToFolderMetaDataTypes", "MetaDataTypeToFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MetaDataTypeToFolder), "MetaDataTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.MetaDataTypes), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.MetaDataValueTypes), "MetaDataTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MetaDataTypes), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypesToContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MetaDataTypesToContentItems), "MetaDataTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.MetaDataTypes), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "MetaDataTypesToContentItemsContentItems", "MetaDataTypesToContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.MetaDataTypesToContentItems), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "ContentHistoryContentItems", "ContentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentHistory), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "ContentHistoryUsers", "ContentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentHistory), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.Users), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "AliasesContentItems", "Aliases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.Aliases), "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.ContentItems), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.TemplateElementTypes), "TemplateElementAttributes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.TemplateElementAttributes), true)]
[assembly: EdmRelationshipAttribute("DataObjects", "ContentItemsObjectSchema", "ContentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TotalCMSLib.ContentItems), "ObjectSchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TotalCMSLib.ObjectSchema), true)]

#endregion

namespace TotalCMSLib
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataObjectsContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataObjectsContainer object using the connection string found in the 'DataObjectsContainer' section of the application configuration file.
        /// </summary>
        public DataObjectsContainer() : base("name=DataObjectsContainer", "DataObjectsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataObjectsContainer object.
        /// </summary>
        public DataObjectsContainer(string connectionString) : base(connectionString, "DataObjectsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataObjectsContainer object.
        /// </summary>
        public DataObjectsContainer(EntityConnection connection) : base(connection, "DataObjectsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentItems> ContentItems
        {
            get
            {
                if ((_ContentItems == null))
                {
                    _ContentItems = base.CreateObjectSet<ContentItems>("ContentItems");
                }
                return _ContentItems;
            }
        }
        private ObjectSet<ContentItems> _ContentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRoles> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRoles>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRoles> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersToUserRoles> UsersToUserRoles
        {
            get
            {
                if ((_UsersToUserRoles == null))
                {
                    _UsersToUserRoles = base.CreateObjectSet<UsersToUserRoles>("UsersToUserRoles");
                }
                return _UsersToUserRoles;
            }
        }
        private ObjectSet<UsersToUserRoles> _UsersToUserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folders> Folders
        {
            get
            {
                if ((_Folders == null))
                {
                    _Folders = base.CreateObjectSet<Folders>("Folders");
                }
                return _Folders;
            }
        }
        private ObjectSet<Folders> _Folders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LibraryItems> LibraryItems
        {
            get
            {
                if ((_LibraryItems == null))
                {
                    _LibraryItems = base.CreateObjectSet<LibraryItems>("LibraryItems");
                }
                return _LibraryItems;
            }
        }
        private ObjectSet<LibraryItems> _LibraryItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Menus> Menus
        {
            get
            {
                if ((_Menus == null))
                {
                    _Menus = base.CreateObjectSet<Menus>("Menus");
                }
                return _Menus;
            }
        }
        private ObjectSet<Menus> _Menus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItems> MenuItems
        {
            get
            {
                if ((_MenuItems == null))
                {
                    _MenuItems = base.CreateObjectSet<MenuItems>("MenuItems");
                }
                return _MenuItems;
            }
        }
        private ObjectSet<MenuItems> _MenuItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calendars> Calendars
        {
            get
            {
                if ((_Calendars == null))
                {
                    _Calendars = base.CreateObjectSet<Calendars>("Calendars");
                }
                return _Calendars;
            }
        }
        private ObjectSet<Calendars> _Calendars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalendarEvents> CalendarEvents
        {
            get
            {
                if ((_CalendarEvents == null))
                {
                    _CalendarEvents = base.CreateObjectSet<CalendarEvents>("CalendarEvents");
                }
                return _CalendarEvents;
            }
        }
        private ObjectSet<CalendarEvents> _CalendarEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aliases> Aliases
        {
            get
            {
                if ((_Aliases == null))
                {
                    _Aliases = base.CreateObjectSet<Aliases>("Aliases");
                }
                return _Aliases;
            }
        }
        private ObjectSet<Aliases> _Aliases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaDataTypesToContentItems> MetaDataTypesToContentItems
        {
            get
            {
                if ((_MetaDataTypesToContentItems == null))
                {
                    _MetaDataTypesToContentItems = base.CreateObjectSet<MetaDataTypesToContentItems>("MetaDataTypesToContentItems");
                }
                return _MetaDataTypesToContentItems;
            }
        }
        private ObjectSet<MetaDataTypesToContentItems> _MetaDataTypesToContentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaDataTypes> MetaDataTypes
        {
            get
            {
                if ((_MetaDataTypes == null))
                {
                    _MetaDataTypes = base.CreateObjectSet<MetaDataTypes>("MetaDataTypes");
                }
                return _MetaDataTypes;
            }
        }
        private ObjectSet<MetaDataTypes> _MetaDataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Languages> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Languages>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Languages> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> UsersSet
        {
            get
            {
                if ((_UsersSet == null))
                {
                    _UsersSet = base.CreateObjectSet<Users>("UsersSet");
                }
                return _UsersSet;
            }
        }
        private ObjectSet<Users> _UsersSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Templates> Templates
        {
            get
            {
                if ((_Templates == null))
                {
                    _Templates = base.CreateObjectSet<Templates>("Templates");
                }
                return _Templates;
            }
        }
        private ObjectSet<Templates> _Templates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateElement> TemplateElements
        {
            get
            {
                if ((_TemplateElements == null))
                {
                    _TemplateElements = base.CreateObjectSet<TemplateElement>("TemplateElements");
                }
                return _TemplateElements;
            }
        }
        private ObjectSet<TemplateElement> _TemplateElements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateElementTypes> TemplateElementTypes
        {
            get
            {
                if ((_TemplateElementTypes == null))
                {
                    _TemplateElementTypes = base.CreateObjectSet<TemplateElementTypes>("TemplateElementTypes");
                }
                return _TemplateElementTypes;
            }
        }
        private ObjectSet<TemplateElementTypes> _TemplateElementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateElementAttributes> TemplateElementAttributes
        {
            get
            {
                if ((_TemplateElementAttributes == null))
                {
                    _TemplateElementAttributes = base.CreateObjectSet<TemplateElementAttributes>("TemplateElementAttributes");
                }
                return _TemplateElementAttributes;
            }
        }
        private ObjectSet<TemplateElementAttributes> _TemplateElementAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permissions> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permissions>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permissions> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaDataTypeToFolder> MetaDataTypeToFolders
        {
            get
            {
                if ((_MetaDataTypeToFolders == null))
                {
                    _MetaDataTypeToFolders = base.CreateObjectSet<MetaDataTypeToFolder>("MetaDataTypeToFolders");
                }
                return _MetaDataTypeToFolders;
            }
        }
        private ObjectSet<MetaDataTypeToFolder> _MetaDataTypeToFolders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaDataValueTypes> MetaDataValueTypes
        {
            get
            {
                if ((_MetaDataValueTypes == null))
                {
                    _MetaDataValueTypes = base.CreateObjectSet<MetaDataValueTypes>("MetaDataValueTypes");
                }
                return _MetaDataValueTypes;
            }
        }
        private ObjectSet<MetaDataValueTypes> _MetaDataValueTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentHistory> ContentHistories
        {
            get
            {
                if ((_ContentHistories == null))
                {
                    _ContentHistories = base.CreateObjectSet<ContentHistory>("ContentHistories");
                }
                return _ContentHistories;
            }
        }
        private ObjectSet<ContentHistory> _ContentHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectSchema> ObjectSchemas
        {
            get
            {
                if ((_ObjectSchemas == null))
                {
                    _ObjectSchemas = base.CreateObjectSet<ObjectSchema>("ObjectSchemas");
                }
                return _ObjectSchemas;
            }
        }
        private ObjectSet<ObjectSchema> _ObjectSchemas;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentItems(ContentItems contentItems)
        {
            base.AddObject("ContentItems", contentItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRoles userRoles)
        {
            base.AddObject("UserRoles", userRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersToUserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersToUserRoles(UsersToUserRoles usersToUserRoles)
        {
            base.AddObject("UsersToUserRoles", usersToUserRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolders(Folders folders)
        {
            base.AddObject("Folders", folders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LibraryItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLibraryItems(LibraryItems libraryItems)
        {
            base.AddObject("LibraryItems", libraryItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Menus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenus(Menus menus)
        {
            base.AddObject("Menus", menus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItems(MenuItems menuItems)
        {
            base.AddObject("MenuItems", menuItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calendars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendars(Calendars calendars)
        {
            base.AddObject("Calendars", calendars);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalendarEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendarEvents(CalendarEvents calendarEvents)
        {
            base.AddObject("CalendarEvents", calendarEvents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aliases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAliases(Aliases aliases)
        {
            base.AddObject("Aliases", aliases);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaDataTypesToContentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaDataTypesToContentItems(MetaDataTypesToContentItems metaDataTypesToContentItems)
        {
            base.AddObject("MetaDataTypesToContentItems", metaDataTypesToContentItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaDataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaDataTypes(MetaDataTypes metaDataTypes)
        {
            base.AddObject("MetaDataTypes", metaDataTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Languages languages)
        {
            base.AddObject("Languages", languages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersSet(Users users)
        {
            base.AddObject("UsersSet", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Templates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplates(Templates templates)
        {
            base.AddObject("Templates", templates);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateElements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateElements(TemplateElement templateElement)
        {
            base.AddObject("TemplateElements", templateElement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateElementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateElementTypes(TemplateElementTypes templateElementTypes)
        {
            base.AddObject("TemplateElementTypes", templateElementTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateElementAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateElementAttributes(TemplateElementAttributes templateElementAttributes)
        {
            base.AddObject("TemplateElementAttributes", templateElementAttributes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permissions permissions)
        {
            base.AddObject("Permissions", permissions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaDataTypeToFolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaDataTypeToFolders(MetaDataTypeToFolder metaDataTypeToFolder)
        {
            base.AddObject("MetaDataTypeToFolders", metaDataTypeToFolder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaDataValueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaDataValueTypes(MetaDataValueTypes metaDataValueTypes)
        {
            base.AddObject("MetaDataValueTypes", metaDataValueTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentHistories(ContentHistory contentHistory)
        {
            base.AddObject("ContentHistories", contentHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectSchemas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectSchemas(ObjectSchema objectSchema)
        {
            base.AddObject("ObjectSchemas", objectSchema);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Aliases")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aliases : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aliases object.
        /// </summary>
        /// <param name="aliasId">Initial value of the AliasId property.</param>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="menuItemId">Initial value of the MenuItemId property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="contentItemId">Initial value of the ContentItemId property.</param>
        public static Aliases CreateAliases(global::System.Int32 aliasId, global::System.Int32 pageId, global::System.Int32 menuItemId, global::System.String alias, global::System.Boolean isActive, global::System.Int32 contentItemId)
        {
            Aliases aliases = new Aliases();
            aliases.AliasId = aliasId;
            aliases.PageId = pageId;
            aliases.MenuItemId = menuItemId;
            aliases.Alias = alias;
            aliases.IsActive = isActive;
            aliases.ContentItemId = contentItemId;
            return aliases;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AliasId
        {
            get
            {
                return _AliasId;
            }
            set
            {
                if (_AliasId != value)
                {
                    OnAliasIdChanging(value);
                    ReportPropertyChanging("AliasId");
                    _AliasId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AliasId");
                    OnAliasIdChanged();
                }
            }
        }
        private global::System.Int32 _AliasId;
        partial void OnAliasIdChanging(global::System.Int32 value);
        partial void OnAliasIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                OnPageIdChanging(value);
                ReportPropertyChanging("PageId");
                _PageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageId");
                OnPageIdChanged();
            }
        }
        private global::System.Int32 _PageId;
        partial void OnPageIdChanging(global::System.Int32 value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuItemId
        {
            get
            {
                return _MenuItemId;
            }
            set
            {
                OnMenuItemIdChanging(value);
                ReportPropertyChanging("MenuItemId");
                _MenuItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuItemId");
                OnMenuItemIdChanged();
            }
        }
        private global::System.Int32 _MenuItemId;
        partial void OnMenuItemIdChanging(global::System.Int32 value);
        partial void OnMenuItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentItemId
        {
            get
            {
                return _ContentItemId;
            }
            set
            {
                OnContentItemIdChanging(value);
                ReportPropertyChanging("ContentItemId");
                _ContentItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentItemId");
                OnContentItemIdChanged();
            }
        }
        private global::System.Int32 _ContentItemId;
        partial void OnContentItemIdChanging(global::System.Int32 value);
        partial void OnContentItemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PagesAliases", "Pages")]
        public Templates Page
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.PagesAliases", "Pages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.PagesAliases", "Pages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Templates> PageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.PagesAliases", "Pages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Templates>("DataObjects.PagesAliases", "Pages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenuItemsAliases", "MenuItems")]
        public EntityCollection<MenuItems> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItems>("DataObjects.MenuItemsAliases", "MenuItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItems>("DataObjects.MenuItemsAliases", "MenuItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AliasesContentItems", "ContentItems")]
        public ContentItems ContentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.AliasesContentItems", "ContentItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.AliasesContentItems", "ContentItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentItems> ContentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.AliasesContentItems", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentItems>("DataObjects.AliasesContentItems", "ContentItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="CalendarEvents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalendarEvents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalendarEvents object.
        /// </summary>
        /// <param name="calendarEventIds">Initial value of the CalendarEventIds property.</param>
        /// <param name="calendarId">Initial value of the CalendarId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="iCalSettings">Initial value of the iCalSettings property.</param>
        public static CalendarEvents CreateCalendarEvents(global::System.Int32 calendarEventIds, global::System.Int32 calendarId, global::System.String name, global::System.String description, global::System.String iCalSettings)
        {
            CalendarEvents calendarEvents = new CalendarEvents();
            calendarEvents.CalendarEventIds = calendarEventIds;
            calendarEvents.CalendarId = calendarId;
            calendarEvents.Name = name;
            calendarEvents.Description = description;
            calendarEvents.iCalSettings = iCalSettings;
            return calendarEvents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarEventIds
        {
            get
            {
                return _CalendarEventIds;
            }
            set
            {
                if (_CalendarEventIds != value)
                {
                    OnCalendarEventIdsChanging(value);
                    ReportPropertyChanging("CalendarEventIds");
                    _CalendarEventIds = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalendarEventIds");
                    OnCalendarEventIdsChanged();
                }
            }
        }
        private global::System.Int32 _CalendarEventIds;
        partial void OnCalendarEventIdsChanging(global::System.Int32 value);
        partial void OnCalendarEventIdsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarId
        {
            get
            {
                return _CalendarId;
            }
            set
            {
                OnCalendarIdChanging(value);
                ReportPropertyChanging("CalendarId");
                _CalendarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalendarId");
                OnCalendarIdChanged();
            }
        }
        private global::System.Int32 _CalendarId;
        partial void OnCalendarIdChanging(global::System.Int32 value);
        partial void OnCalendarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iCalSettings
        {
            get
            {
                return _iCalSettings;
            }
            set
            {
                OniCalSettingsChanging(value);
                ReportPropertyChanging("iCalSettings");
                _iCalSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("iCalSettings");
                OniCalSettingsChanged();
            }
        }
        private global::System.String _iCalSettings;
        partial void OniCalSettingsChanging(global::System.String value);
        partial void OniCalSettingsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "CalendarsCalendarEvents", "Calendars")]
        public Calendars Calendar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendars>("DataObjects.CalendarsCalendarEvents", "Calendars").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendars>("DataObjects.CalendarsCalendarEvents", "Calendars").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendars> CalendarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendars>("DataObjects.CalendarsCalendarEvents", "Calendars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendars>("DataObjects.CalendarsCalendarEvents", "Calendars", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Calendars")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calendars : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calendars object.
        /// </summary>
        /// <param name="calendarId">Initial value of the CalendarId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Calendars CreateCalendars(global::System.Int32 calendarId, global::System.Int32 folderId, global::System.String name)
        {
            Calendars calendars = new Calendars();
            calendars.CalendarId = calendarId;
            calendars.FolderId = folderId;
            calendars.Name = name;
            return calendars;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarId
        {
            get
            {
                return _CalendarId;
            }
            set
            {
                if (_CalendarId != value)
                {
                    OnCalendarIdChanging(value);
                    ReportPropertyChanging("CalendarId");
                    _CalendarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalendarId");
                    OnCalendarIdChanged();
                }
            }
        }
        private global::System.Int32 _CalendarId;
        partial void OnCalendarIdChanging(global::System.Int32 value);
        partial void OnCalendarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "CalendarsFolders", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.CalendarsFolders", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.CalendarsFolders", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.CalendarsFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.CalendarsFolders", "Folders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "CalendarsCalendarEvents", "CalendarEvents")]
        public EntityCollection<CalendarEvents> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalendarEvents>("DataObjects.CalendarsCalendarEvents", "CalendarEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalendarEvents>("DataObjects.CalendarsCalendarEvents", "CalendarEvents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="ContentHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentHistory object.
        /// </summary>
        /// <param name="contentHistoryId">Initial value of the ContentHistoryId property.</param>
        /// <param name="contentItemId">Initial value of the ContentItemId property.</param>
        /// <param name="versionNumber">Initial value of the VersionNumber property.</param>
        /// <param name="contentHtml">Initial value of the ContentHtml property.</param>
        /// <param name="contentSummary">Initial value of the ContentSummary property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="metaDataXml">Initial value of the MetaDataXml property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static ContentHistory CreateContentHistory(global::System.Int32 contentHistoryId, global::System.Int32 contentItemId, global::System.Double versionNumber, global::System.String contentHtml, global::System.String contentSummary, global::System.DateTime dateCreated, global::System.String metaDataXml, global::System.Int32 createdByUserId)
        {
            ContentHistory contentHistory = new ContentHistory();
            contentHistory.ContentHistoryId = contentHistoryId;
            contentHistory.ContentItemId = contentItemId;
            contentHistory.VersionNumber = versionNumber;
            contentHistory.ContentHtml = contentHtml;
            contentHistory.ContentSummary = contentSummary;
            contentHistory.DateCreated = dateCreated;
            contentHistory.MetaDataXml = metaDataXml;
            contentHistory.CreatedByUserId = createdByUserId;
            return contentHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentHistoryId
        {
            get
            {
                return _ContentHistoryId;
            }
            set
            {
                if (_ContentHistoryId != value)
                {
                    OnContentHistoryIdChanging(value);
                    ReportPropertyChanging("ContentHistoryId");
                    _ContentHistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentHistoryId");
                    OnContentHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentHistoryId;
        partial void OnContentHistoryIdChanging(global::System.Int32 value);
        partial void OnContentHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentItemId
        {
            get
            {
                return _ContentItemId;
            }
            set
            {
                OnContentItemIdChanging(value);
                ReportPropertyChanging("ContentItemId");
                _ContentItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentItemId");
                OnContentItemIdChanged();
            }
        }
        private global::System.Int32 _ContentItemId;
        partial void OnContentItemIdChanging(global::System.Int32 value);
        partial void OnContentItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double VersionNumber
        {
            get
            {
                return _VersionNumber;
            }
            set
            {
                OnVersionNumberChanging(value);
                ReportPropertyChanging("VersionNumber");
                _VersionNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionNumber");
                OnVersionNumberChanged();
            }
        }
        private global::System.Double _VersionNumber;
        partial void OnVersionNumberChanging(global::System.Double value);
        partial void OnVersionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentHtml
        {
            get
            {
                return _ContentHtml;
            }
            set
            {
                OnContentHtmlChanging(value);
                ReportPropertyChanging("ContentHtml");
                _ContentHtml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentHtml");
                OnContentHtmlChanged();
            }
        }
        private global::System.String _ContentHtml;
        partial void OnContentHtmlChanging(global::System.String value);
        partial void OnContentHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentSummary
        {
            get
            {
                return _ContentSummary;
            }
            set
            {
                OnContentSummaryChanging(value);
                ReportPropertyChanging("ContentSummary");
                _ContentSummary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentSummary");
                OnContentSummaryChanged();
            }
        }
        private global::System.String _ContentSummary;
        partial void OnContentSummaryChanging(global::System.String value);
        partial void OnContentSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaDataXml
        {
            get
            {
                return _MetaDataXml;
            }
            set
            {
                OnMetaDataXmlChanging(value);
                ReportPropertyChanging("MetaDataXml");
                _MetaDataXml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetaDataXml");
                OnMetaDataXmlChanged();
            }
        }
        private global::System.String _MetaDataXml;
        partial void OnMetaDataXmlChanging(global::System.String value);
        partial void OnMetaDataXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentHistoryContentItems", "ContentItems")]
        public ContentItems ContentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.ContentHistoryContentItems", "ContentItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.ContentHistoryContentItems", "ContentItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentItems> ContentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.ContentHistoryContentItems", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentItems>("DataObjects.ContentHistoryContentItems", "ContentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentHistoryUsers", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.ContentHistoryUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.ContentHistoryUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.ContentHistoryUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DataObjects.ContentHistoryUsers", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="ContentItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentItems object.
        /// </summary>
        /// <param name="contentItemId">Initial value of the ContentItemId property.</param>
        /// <param name="contentHtml">Initial value of the ContentHtml property.</param>
        /// <param name="contentSummary">Initial value of the ContentSummary property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="modifiedByUserId">Initial value of the ModifiedByUserId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="contentStatus">Initial value of the ContentStatus property.</param>
        /// <param name="objectSchemaId">Initial value of the ObjectSchemaId property.</param>
        public static ContentItems CreateContentItems(global::System.Int32 contentItemId, global::System.String contentHtml, global::System.String contentSummary, global::System.DateTime dateCreated, global::System.DateTime dateModified, global::System.Int32 createdByUserId, global::System.Int32 modifiedByUserId, global::System.Int32 folderId, global::System.String contentStatus, global::System.Int32 objectSchemaId)
        {
            ContentItems contentItems = new ContentItems();
            contentItems.ContentItemId = contentItemId;
            contentItems.ContentHtml = contentHtml;
            contentItems.ContentSummary = contentSummary;
            contentItems.DateCreated = dateCreated;
            contentItems.DateModified = dateModified;
            contentItems.CreatedByUserId = createdByUserId;
            contentItems.ModifiedByUserId = modifiedByUserId;
            contentItems.FolderId = folderId;
            contentItems.ContentStatus = contentStatus;
            contentItems.ObjectSchemaId = objectSchemaId;
            return contentItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentItemId
        {
            get
            {
                return _ContentItemId;
            }
            set
            {
                if (_ContentItemId != value)
                {
                    OnContentItemIdChanging(value);
                    ReportPropertyChanging("ContentItemId");
                    _ContentItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentItemId");
                    OnContentItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentItemId;
        partial void OnContentItemIdChanging(global::System.Int32 value);
        partial void OnContentItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentHtml
        {
            get
            {
                return _ContentHtml;
            }
            set
            {
                OnContentHtmlChanging(value);
                ReportPropertyChanging("ContentHtml");
                _ContentHtml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentHtml");
                OnContentHtmlChanged();
            }
        }
        private global::System.String _ContentHtml;
        partial void OnContentHtmlChanging(global::System.String value);
        partial void OnContentHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentSummary
        {
            get
            {
                return _ContentSummary;
            }
            set
            {
                OnContentSummaryChanging(value);
                ReportPropertyChanging("ContentSummary");
                _ContentSummary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentSummary");
                OnContentSummaryChanged();
            }
        }
        private global::System.String _ContentSummary;
        partial void OnContentSummaryChanging(global::System.String value);
        partial void OnContentSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedByUserId
        {
            get
            {
                return _ModifiedByUserId;
            }
            set
            {
                OnModifiedByUserIdChanging(value);
                ReportPropertyChanging("ModifiedByUserId");
                _ModifiedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedByUserId");
                OnModifiedByUserIdChanged();
            }
        }
        private global::System.Int32 _ModifiedByUserId;
        partial void OnModifiedByUserIdChanging(global::System.Int32 value);
        partial void OnModifiedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentStatus
        {
            get
            {
                return _ContentStatus;
            }
            set
            {
                OnContentStatusChanging(value);
                ReportPropertyChanging("ContentStatus");
                _ContentStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentStatus");
                OnContentStatusChanged();
            }
        }
        private global::System.String _ContentStatus;
        partial void OnContentStatusChanging(global::System.String value);
        partial void OnContentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectSchemaId
        {
            get
            {
                return _ObjectSchemaId;
            }
            set
            {
                OnObjectSchemaIdChanging(value);
                ReportPropertyChanging("ObjectSchemaId");
                _ObjectSchemaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectSchemaId");
                OnObjectSchemaIdChanged();
            }
        }
        private global::System.Int32 _ObjectSchemaId;
        partial void OnObjectSchemaIdChanging(global::System.Int32 value);
        partial void OnObjectSchemaIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersContentItems", "Users")]
        public Users CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DataObjects.UsersContentItems", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersContentItems1", "Users")]
        public Users ModifiedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> ModifiedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersContentItems1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DataObjects.UsersContentItems1", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "FoldersContentItems", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.FoldersContentItems", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.FoldersContentItems", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.FoldersContentItems", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.FoldersContentItems", "Folders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypesToContentItemsContentItems", "MetaDataTypesToContentItems")]
        public EntityCollection<MetaDataTypesToContentItems> MetaDataTypesToContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaDataTypesToContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "MetaDataTypesToContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaDataTypesToContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "MetaDataTypesToContentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentHistoryContentItems", "ContentHistory")]
        public EntityCollection<ContentHistory> ContentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentHistory>("DataObjects.ContentHistoryContentItems", "ContentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentHistory>("DataObjects.ContentHistoryContentItems", "ContentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AliasesContentItems", "Aliases")]
        public EntityCollection<Aliases> Aliases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Aliases>("DataObjects.AliasesContentItems", "Aliases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Aliases>("DataObjects.AliasesContentItems", "Aliases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentItemsObjectSchema", "ObjectSchema")]
        public ObjectSchema ObjectSchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectSchema>("DataObjects.ContentItemsObjectSchema", "ObjectSchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectSchema>("DataObjects.ContentItemsObjectSchema", "ObjectSchema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectSchema> ObjectSchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectSchema>("DataObjects.ContentItemsObjectSchema", "ObjectSchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectSchema>("DataObjects.ContentItemsObjectSchema", "ObjectSchema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Folders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folders object.
        /// </summary>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="inheritPermissions">Initial value of the InheritPermissions property.</param>
        /// <param name="parentFolderId">Initial value of the ParentFolderId property.</param>
        /// <param name="inheritMetaData">Initial value of the InheritMetaData property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="permissionsId">Initial value of the PermissionsId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Folders CreateFolders(global::System.Int32 folderId, global::System.Int32 languageId, global::System.String name, global::System.String description, global::System.Boolean inheritPermissions, global::System.Int32 parentFolderId, global::System.Boolean inheritMetaData, global::System.DateTime dateCreated, global::System.String dateModified, global::System.Int32 permissionsId, global::System.Boolean isActive)
        {
            Folders folders = new Folders();
            folders.FolderId = folderId;
            folders.LanguageId = languageId;
            folders.Name = name;
            folders.Description = description;
            folders.InheritPermissions = inheritPermissions;
            folders.ParentFolderId = parentFolderId;
            folders.InheritMetaData = inheritMetaData;
            folders.DateCreated = dateCreated;
            folders.DateModified = dateModified;
            folders.PermissionsId = permissionsId;
            folders.IsActive = isActive;
            return folders;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                if (_FolderId != value)
                {
                    OnFolderIdChanging(value);
                    ReportPropertyChanging("FolderId");
                    _FolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderId");
                    OnFolderIdChanged();
                }
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InheritPermissions
        {
            get
            {
                return _InheritPermissions;
            }
            set
            {
                OnInheritPermissionsChanging(value);
                ReportPropertyChanging("InheritPermissions");
                _InheritPermissions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InheritPermissions");
                OnInheritPermissionsChanged();
            }
        }
        private global::System.Boolean _InheritPermissions;
        partial void OnInheritPermissionsChanging(global::System.Boolean value);
        partial void OnInheritPermissionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentFolderId
        {
            get
            {
                return _ParentFolderId;
            }
            set
            {
                OnParentFolderIdChanging(value);
                ReportPropertyChanging("ParentFolderId");
                _ParentFolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFolderId");
                OnParentFolderIdChanged();
            }
        }
        private global::System.Int32 _ParentFolderId;
        partial void OnParentFolderIdChanging(global::System.Int32 value);
        partial void OnParentFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InheritMetaData
        {
            get
            {
                return _InheritMetaData;
            }
            set
            {
                OnInheritMetaDataChanging(value);
                ReportPropertyChanging("InheritMetaData");
                _InheritMetaData = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InheritMetaData");
                OnInheritMetaDataChanged();
            }
        }
        private global::System.Boolean _InheritMetaData;
        partial void OnInheritMetaDataChanging(global::System.Boolean value);
        partial void OnInheritMetaDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.String _DateModified;
        partial void OnDateModifiedChanging(global::System.String value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionsId
        {
            get
            {
                return _PermissionsId;
            }
            set
            {
                OnPermissionsIdChanging(value);
                ReportPropertyChanging("PermissionsId");
                _PermissionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionsId");
                OnPermissionsIdChanged();
            }
        }
        private global::System.Int32 _PermissionsId;
        partial void OnPermissionsIdChanging(global::System.Int32 value);
        partial void OnPermissionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "FoldersContentItems", "ContentItems")]
        public EntityCollection<ContentItems> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItems>("DataObjects.FoldersContentItems", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItems>("DataObjects.FoldersContentItems", "ContentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LanguagesFolders", "Languages")]
        public Languages Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesFolders", "Languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesFolders", "Languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Languages> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesFolders", "Languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Languages>("DataObjects.LanguagesFolders", "Languages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "CalendarsFolders", "Calendars")]
        public EntityCollection<Calendars> Calendars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calendars>("DataObjects.CalendarsFolders", "Calendars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calendars>("DataObjects.CalendarsFolders", "Calendars", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenusFolders", "Menus")]
        public EntityCollection<Menus> Menus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Menus>("DataObjects.MenusFolders", "Menus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Menus>("DataObjects.MenusFolders", "Menus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LibraryItemsFolders", "LibraryItems")]
        public EntityCollection<LibraryItems> LibraryItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LibraryItems>("DataObjects.LibraryItemsFolders", "LibraryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LibraryItems>("DataObjects.LibraryItemsFolders", "LibraryItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ChildFolders", "Folders1")]
        public EntityCollection<Folders> ParentFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folders>("DataObjects.ChildFolders", "Folders1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folders>("DataObjects.ChildFolders", "Folders1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ChildFolders", "Folders1")]
        public EntityCollection<Folders> ChildFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folders>("DataObjects.ChildFolders", "Folders1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folders>("DataObjects.ChildFolders", "Folders1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PermissionsFolders", "Permissions")]
        public EntityCollection<Permissions> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permissions>("DataObjects.PermissionsFolders", "Permissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permissions>("DataObjects.PermissionsFolders", "Permissions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypeToFolderFolders", "MetaDataTypeToFolder")]
        public EntityCollection<MetaDataTypeToFolder> MetaDataTypeToFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaDataTypeToFolder>("DataObjects.MetaDataTypeToFolderFolders", "MetaDataTypeToFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaDataTypeToFolder>("DataObjects.MetaDataTypeToFolderFolders", "MetaDataTypeToFolder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Languages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Languages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Languages object.
        /// </summary>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Languages CreateLanguages(global::System.Int32 languageId, global::System.String name, global::System.Boolean isActive)
        {
            Languages languages = new Languages();
            languages.LanguageId = languageId;
            languages.Name = name;
            languages.IsActive = isActive;
            return languages;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                if (_LanguageId != value)
                {
                    OnLanguageIdChanging(value);
                    ReportPropertyChanging("LanguageId");
                    _LanguageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageId");
                    OnLanguageIdChanged();
                }
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LanguagesUsers", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("DataObjects.LanguagesUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("DataObjects.LanguagesUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LanguagesFolders", "Folders")]
        public EntityCollection<Folders> Folders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folders>("DataObjects.LanguagesFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folders>("DataObjects.LanguagesFolders", "Folders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="LibraryItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LibraryItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LibraryItems object.
        /// </summary>
        /// <param name="libraryItemId">Initial value of the LibraryItemId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="fileUrl">Initial value of the FileUrl property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="desciprtion">Initial value of the Desciprtion property.</param>
        public static LibraryItems CreateLibraryItems(global::System.Int32 libraryItemId, global::System.Int32 folderId, global::System.String fileUrl, global::System.String name, global::System.String desciprtion)
        {
            LibraryItems libraryItems = new LibraryItems();
            libraryItems.LibraryItemId = libraryItemId;
            libraryItems.FolderId = folderId;
            libraryItems.FileUrl = fileUrl;
            libraryItems.Name = name;
            libraryItems.Desciprtion = desciprtion;
            return libraryItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryItemId
        {
            get
            {
                return _LibraryItemId;
            }
            set
            {
                if (_LibraryItemId != value)
                {
                    OnLibraryItemIdChanging(value);
                    ReportPropertyChanging("LibraryItemId");
                    _LibraryItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LibraryItemId");
                    OnLibraryItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LibraryItemId;
        partial void OnLibraryItemIdChanging(global::System.Int32 value);
        partial void OnLibraryItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileUrl
        {
            get
            {
                return _FileUrl;
            }
            set
            {
                OnFileUrlChanging(value);
                ReportPropertyChanging("FileUrl");
                _FileUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileUrl");
                OnFileUrlChanged();
            }
        }
        private global::System.String _FileUrl;
        partial void OnFileUrlChanging(global::System.String value);
        partial void OnFileUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Desciprtion
        {
            get
            {
                return _Desciprtion;
            }
            set
            {
                OnDesciprtionChanging(value);
                ReportPropertyChanging("Desciprtion");
                _Desciprtion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Desciprtion");
                OnDesciprtionChanged();
            }
        }
        private global::System.String _Desciprtion;
        partial void OnDesciprtionChanging(global::System.String value);
        partial void OnDesciprtionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LibraryItemsFolders", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.LibraryItemsFolders", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.LibraryItemsFolders", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.LibraryItemsFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.LibraryItemsFolders", "Folders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="MenuItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItems object.
        /// </summary>
        /// <param name="menuItemId">Initial value of the MenuItemId property.</param>
        /// <param name="menuId">Initial value of the MenuId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="aliasId">Initial value of the AliasId property.</param>
        public static MenuItems CreateMenuItems(global::System.Int32 menuItemId, global::System.Int32 menuId, global::System.String name, global::System.Int32 aliasId)
        {
            MenuItems menuItems = new MenuItems();
            menuItems.MenuItemId = menuItemId;
            menuItems.MenuId = menuId;
            menuItems.Name = name;
            menuItems.AliasId = aliasId;
            return menuItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuItemId
        {
            get
            {
                return _MenuItemId;
            }
            set
            {
                if (_MenuItemId != value)
                {
                    OnMenuItemIdChanging(value);
                    ReportPropertyChanging("MenuItemId");
                    _MenuItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MenuItemId");
                    OnMenuItemIdChanged();
                }
            }
        }
        private global::System.Int32 _MenuItemId;
        partial void OnMenuItemIdChanging(global::System.Int32 value);
        partial void OnMenuItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuId
        {
            get
            {
                return _MenuId;
            }
            set
            {
                OnMenuIdChanging(value);
                ReportPropertyChanging("MenuId");
                _MenuId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuId");
                OnMenuIdChanged();
            }
        }
        private global::System.Int32 _MenuId;
        partial void OnMenuIdChanging(global::System.Int32 value);
        partial void OnMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AliasId
        {
            get
            {
                return _AliasId;
            }
            set
            {
                OnAliasIdChanging(value);
                ReportPropertyChanging("AliasId");
                _AliasId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AliasId");
                OnAliasIdChanged();
            }
        }
        private global::System.Int32 _AliasId;
        partial void OnAliasIdChanging(global::System.Int32 value);
        partial void OnAliasIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenuItemsMenus", "Menus")]
        public Menus Menu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menus>("DataObjects.MenuItemsMenus", "Menus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menus>("DataObjects.MenuItemsMenus", "Menus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Menus> MenuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menus>("DataObjects.MenuItemsMenus", "Menus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Menus>("DataObjects.MenuItemsMenus", "Menus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenuItemsAliases", "Aliases")]
        public Aliases Alias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aliases>("DataObjects.MenuItemsAliases", "Aliases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aliases>("DataObjects.MenuItemsAliases", "Aliases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aliases> AliasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aliases>("DataObjects.MenuItemsAliases", "Aliases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aliases>("DataObjects.MenuItemsAliases", "Aliases", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Menus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Menus object.
        /// </summary>
        /// <param name="menuId">Initial value of the MenuId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Menus CreateMenus(global::System.Int32 menuId, global::System.Int32 folderId, global::System.String name)
        {
            Menus menus = new Menus();
            menus.MenuId = menuId;
            menus.FolderId = folderId;
            menus.Name = name;
            return menus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuId
        {
            get
            {
                return _MenuId;
            }
            set
            {
                if (_MenuId != value)
                {
                    OnMenuIdChanging(value);
                    ReportPropertyChanging("MenuId");
                    _MenuId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MenuId");
                    OnMenuIdChanged();
                }
            }
        }
        private global::System.Int32 _MenuId;
        partial void OnMenuIdChanging(global::System.Int32 value);
        partial void OnMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenusFolders", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MenusFolders", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MenusFolders", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MenusFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.MenusFolders", "Folders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MenuItemsMenus", "MenuItems")]
        public EntityCollection<MenuItems> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItems>("DataObjects.MenuItemsMenus", "MenuItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItems>("DataObjects.MenuItemsMenus", "MenuItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="MetaDataTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaDataTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaDataTypes object.
        /// </summary>
        /// <param name="metaDataTypeId">Initial value of the MetaDataTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="defaultValue">Initial value of the DefaultValue property.</param>
        /// <param name="metaDataValueTypesId">Initial value of the MetaDataValueTypesId property.</param>
        public static MetaDataTypes CreateMetaDataTypes(global::System.Int32 metaDataTypeId, global::System.String name, global::System.String defaultValue, global::System.Int32 metaDataValueTypesId)
        {
            MetaDataTypes metaDataTypes = new MetaDataTypes();
            metaDataTypes.MetaDataTypeId = metaDataTypeId;
            metaDataTypes.Name = name;
            metaDataTypes.DefaultValue = defaultValue;
            metaDataTypes.MetaDataValueTypesId = metaDataValueTypesId;
            return metaDataTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataTypeId
        {
            get
            {
                return _MetaDataTypeId;
            }
            set
            {
                if (_MetaDataTypeId != value)
                {
                    OnMetaDataTypeIdChanging(value);
                    ReportPropertyChanging("MetaDataTypeId");
                    _MetaDataTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaDataTypeId");
                    OnMetaDataTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaDataTypeId;
        partial void OnMetaDataTypeIdChanging(global::System.Int32 value);
        partial void OnMetaDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultValue
        {
            get
            {
                return _DefaultValue;
            }
            set
            {
                OnDefaultValueChanging(value);
                ReportPropertyChanging("DefaultValue");
                _DefaultValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultValue");
                OnDefaultValueChanged();
            }
        }
        private global::System.String _DefaultValue;
        partial void OnDefaultValueChanging(global::System.String value);
        partial void OnDefaultValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataValueTypesId
        {
            get
            {
                return _MetaDataValueTypesId;
            }
            set
            {
                OnMetaDataValueTypesIdChanging(value);
                ReportPropertyChanging("MetaDataValueTypesId");
                _MetaDataValueTypesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaDataValueTypesId");
                OnMetaDataValueTypesIdChanged();
            }
        }
        private global::System.Int32 _MetaDataValueTypesId;
        partial void OnMetaDataValueTypesIdChanging(global::System.Int32 value);
        partial void OnMetaDataValueTypesIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypeToFolderMetaDataTypes", "MetaDataTypeToFolder")]
        public EntityCollection<MetaDataTypeToFolder> MetaDataTypeToFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaDataTypeToFolder>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypeToFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaDataTypeToFolder>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypeToFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes")]
        public MetaDataValueTypes MetaDataValueType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataValueTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataValueTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaDataValueTypes> MetaDataValueTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataValueTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaDataValueTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataValueTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypesToContentItems")]
        public EntityCollection<MetaDataTypesToContentItems> MetaDataTypesToContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaDataTypesToContentItems>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypesToContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaDataTypesToContentItems>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypesToContentItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="MetaDataTypesToContentItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaDataTypesToContentItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaDataTypesToContentItems object.
        /// </summary>
        /// <param name="metaDataTypesToContentItemsId">Initial value of the MetaDataTypesToContentItemsId property.</param>
        /// <param name="metaDataTypeId">Initial value of the MetaDataTypeId property.</param>
        /// <param name="contentItemId">Initial value of the ContentItemId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static MetaDataTypesToContentItems CreateMetaDataTypesToContentItems(global::System.Int32 metaDataTypesToContentItemsId, global::System.Int32 metaDataTypeId, global::System.Int32 contentItemId, global::System.String value)
        {
            MetaDataTypesToContentItems metaDataTypesToContentItems = new MetaDataTypesToContentItems();
            metaDataTypesToContentItems.MetaDataTypesToContentItemsId = metaDataTypesToContentItemsId;
            metaDataTypesToContentItems.MetaDataTypeId = metaDataTypeId;
            metaDataTypesToContentItems.ContentItemId = contentItemId;
            metaDataTypesToContentItems.Value = value;
            return metaDataTypesToContentItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataTypesToContentItemsId
        {
            get
            {
                return _MetaDataTypesToContentItemsId;
            }
            set
            {
                if (_MetaDataTypesToContentItemsId != value)
                {
                    OnMetaDataTypesToContentItemsIdChanging(value);
                    ReportPropertyChanging("MetaDataTypesToContentItemsId");
                    _MetaDataTypesToContentItemsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaDataTypesToContentItemsId");
                    OnMetaDataTypesToContentItemsIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaDataTypesToContentItemsId;
        partial void OnMetaDataTypesToContentItemsIdChanging(global::System.Int32 value);
        partial void OnMetaDataTypesToContentItemsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataTypeId
        {
            get
            {
                return _MetaDataTypeId;
            }
            set
            {
                OnMetaDataTypeIdChanging(value);
                ReportPropertyChanging("MetaDataTypeId");
                _MetaDataTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaDataTypeId");
                OnMetaDataTypeIdChanged();
            }
        }
        private global::System.Int32 _MetaDataTypeId;
        partial void OnMetaDataTypeIdChanging(global::System.Int32 value);
        partial void OnMetaDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentItemId
        {
            get
            {
                return _ContentItemId;
            }
            set
            {
                OnContentItemIdChanging(value);
                ReportPropertyChanging("ContentItemId");
                _ContentItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentItemId");
                OnContentItemIdChanged();
            }
        }
        private global::System.Int32 _ContentItemId;
        partial void OnContentItemIdChanging(global::System.Int32 value);
        partial void OnContentItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypes")]
        public MetaDataTypes MetaDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaDataTypes> MetaDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypesToContentItemsMetaDataTypes", "MetaDataTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypesToContentItemsContentItems", "ContentItems")]
        public ContentItems ContentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "ContentItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "ContentItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentItems> ContentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentItems>("DataObjects.MetaDataTypesToContentItemsContentItems", "ContentItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="MetaDataTypeToFolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaDataTypeToFolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaDataTypeToFolder object.
        /// </summary>
        /// <param name="metaDataTypeToFolderId">Initial value of the MetaDataTypeToFolderId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="metaDataTypeId">Initial value of the MetaDataTypeId property.</param>
        /// <param name="isRequired">Initial value of the IsRequired property.</param>
        public static MetaDataTypeToFolder CreateMetaDataTypeToFolder(global::System.Int32 metaDataTypeToFolderId, global::System.Int32 folderId, global::System.Int32 metaDataTypeId, global::System.Boolean isRequired)
        {
            MetaDataTypeToFolder metaDataTypeToFolder = new MetaDataTypeToFolder();
            metaDataTypeToFolder.MetaDataTypeToFolderId = metaDataTypeToFolderId;
            metaDataTypeToFolder.FolderId = folderId;
            metaDataTypeToFolder.MetaDataTypeId = metaDataTypeId;
            metaDataTypeToFolder.IsRequired = isRequired;
            return metaDataTypeToFolder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataTypeToFolderId
        {
            get
            {
                return _MetaDataTypeToFolderId;
            }
            set
            {
                if (_MetaDataTypeToFolderId != value)
                {
                    OnMetaDataTypeToFolderIdChanging(value);
                    ReportPropertyChanging("MetaDataTypeToFolderId");
                    _MetaDataTypeToFolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaDataTypeToFolderId");
                    OnMetaDataTypeToFolderIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaDataTypeToFolderId;
        partial void OnMetaDataTypeToFolderIdChanging(global::System.Int32 value);
        partial void OnMetaDataTypeToFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataTypeId
        {
            get
            {
                return _MetaDataTypeId;
            }
            set
            {
                OnMetaDataTypeIdChanging(value);
                ReportPropertyChanging("MetaDataTypeId");
                _MetaDataTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaDataTypeId");
                OnMetaDataTypeIdChanged();
            }
        }
        private global::System.Int32 _MetaDataTypeId;
        partial void OnMetaDataTypeIdChanging(global::System.Int32 value);
        partial void OnMetaDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypeToFolderFolders", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MetaDataTypeToFolderFolders", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MetaDataTypeToFolderFolders", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.MetaDataTypeToFolderFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.MetaDataTypeToFolderFolders", "Folders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataTypeToFolderMetaDataTypes", "MetaDataTypes")]
        public MetaDataTypes MetaDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaDataTypes> MetaDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaDataTypes>("DataObjects.MetaDataTypeToFolderMetaDataTypes", "MetaDataTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="MetaDataValueTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaDataValueTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaDataValueTypes object.
        /// </summary>
        /// <param name="metaDataValueTypesId">Initial value of the MetaDataValueTypesId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MetaDataValueTypes CreateMetaDataValueTypes(global::System.Int32 metaDataValueTypesId, global::System.String name)
        {
            MetaDataValueTypes metaDataValueTypes = new MetaDataValueTypes();
            metaDataValueTypes.MetaDataValueTypesId = metaDataValueTypesId;
            metaDataValueTypes.Name = name;
            return metaDataValueTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaDataValueTypesId
        {
            get
            {
                return _MetaDataValueTypesId;
            }
            set
            {
                if (_MetaDataValueTypesId != value)
                {
                    OnMetaDataValueTypesIdChanging(value);
                    ReportPropertyChanging("MetaDataValueTypesId");
                    _MetaDataValueTypesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaDataValueTypesId");
                    OnMetaDataValueTypesIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaDataValueTypesId;
        partial void OnMetaDataValueTypesIdChanging(global::System.Int32 value);
        partial void OnMetaDataValueTypesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "MetaDataValueTypesMetaDataTypes", "MetaDataTypes")]
        public EntityCollection<MetaDataTypes> MetaDataTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaDataTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaDataTypes>("DataObjects.MetaDataValueTypesMetaDataTypes", "MetaDataTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="ObjectSchema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectSchema : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectSchema object.
        /// </summary>
        /// <param name="objectSchemaId">Initial value of the ObjectSchemaId property.</param>
        /// <param name="schemaXml">Initial value of the SchemaXml property.</param>
        public static ObjectSchema CreateObjectSchema(global::System.Int32 objectSchemaId, global::System.String schemaXml)
        {
            ObjectSchema objectSchema = new ObjectSchema();
            objectSchema.ObjectSchemaId = objectSchemaId;
            objectSchema.SchemaXml = schemaXml;
            return objectSchema;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectSchemaId
        {
            get
            {
                return _ObjectSchemaId;
            }
            set
            {
                if (_ObjectSchemaId != value)
                {
                    OnObjectSchemaIdChanging(value);
                    ReportPropertyChanging("ObjectSchemaId");
                    _ObjectSchemaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectSchemaId");
                    OnObjectSchemaIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectSchemaId;
        partial void OnObjectSchemaIdChanging(global::System.Int32 value);
        partial void OnObjectSchemaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SchemaXml
        {
            get
            {
                return _SchemaXml;
            }
            set
            {
                OnSchemaXmlChanging(value);
                ReportPropertyChanging("SchemaXml");
                _SchemaXml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SchemaXml");
                OnSchemaXmlChanged();
            }
        }
        private global::System.String _SchemaXml;
        partial void OnSchemaXmlChanging(global::System.String value);
        partial void OnSchemaXmlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentItemsObjectSchema", "ContentItems")]
        public EntityCollection<ContentItems> ContentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItems>("DataObjects.ContentItemsObjectSchema", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItems>("DataObjects.ContentItemsObjectSchema", "ContentItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Permissions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permissions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permissions object.
        /// </summary>
        /// <param name="permissionsId">Initial value of the PermissionsId property.</param>
        /// <param name="userRoleId">Initial value of the UserRoleId property.</param>
        /// <param name="canReadContent">Initial value of the CanReadContent property.</param>
        /// <param name="canAddContent">Initial value of the CanAddContent property.</param>
        /// <param name="canDeleteContent">Initial value of the CanDeleteContent property.</param>
        /// <param name="canReadMenus">Initial value of the CanReadMenus property.</param>
        /// <param name="canAddMenus">Initial value of the CanAddMenus property.</param>
        /// <param name="canDeleteMenus">Initial value of the CanDeleteMenus property.</param>
        /// <param name="canReadFolders">Initial value of the CanReadFolders property.</param>
        /// <param name="canAddFolders">Initial value of the CanAddFolders property.</param>
        /// <param name="canDeleteFoldres">Initial value of the CanDeleteFoldres property.</param>
        /// <param name="canReadCalendars">Initial value of the CanReadCalendars property.</param>
        /// <param name="canAddCalendars">Initial value of the CanAddCalendars property.</param>
        /// <param name="canDeleteCalednars">Initial value of the CanDeleteCalednars property.</param>
        /// <param name="canEditContent">Initial value of the CanEditContent property.</param>
        /// <param name="canEditMenus">Initial value of the CanEditMenus property.</param>
        /// <param name="canEditFolder">Initial value of the CanEditFolder property.</param>
        /// <param name="canEditCalendar">Initial value of the CanEditCalendar property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="isPageAdmin">Initial value of the IsPageAdmin property.</param>
        public static Permissions CreatePermissions(global::System.Int32 permissionsId, global::System.Int32 userRoleId, global::System.Boolean canReadContent, global::System.Boolean canAddContent, global::System.Boolean canDeleteContent, global::System.Boolean canReadMenus, global::System.Boolean canAddMenus, global::System.Boolean canDeleteMenus, global::System.Boolean canReadFolders, global::System.Boolean canAddFolders, global::System.Boolean canDeleteFoldres, global::System.Boolean canReadCalendars, global::System.Boolean canAddCalendars, global::System.Boolean canDeleteCalednars, global::System.Boolean canEditContent, global::System.Boolean canEditMenus, global::System.Boolean canEditFolder, global::System.Boolean canEditCalendar, global::System.Int32 folderId, global::System.Boolean isPageAdmin)
        {
            Permissions permissions = new Permissions();
            permissions.PermissionsId = permissionsId;
            permissions.UserRoleId = userRoleId;
            permissions.CanReadContent = canReadContent;
            permissions.CanAddContent = canAddContent;
            permissions.CanDeleteContent = canDeleteContent;
            permissions.CanReadMenus = canReadMenus;
            permissions.CanAddMenus = canAddMenus;
            permissions.CanDeleteMenus = canDeleteMenus;
            permissions.CanReadFolders = canReadFolders;
            permissions.CanAddFolders = canAddFolders;
            permissions.CanDeleteFoldres = canDeleteFoldres;
            permissions.CanReadCalendars = canReadCalendars;
            permissions.CanAddCalendars = canAddCalendars;
            permissions.CanDeleteCalednars = canDeleteCalednars;
            permissions.CanEditContent = canEditContent;
            permissions.CanEditMenus = canEditMenus;
            permissions.CanEditFolder = canEditFolder;
            permissions.CanEditCalendar = canEditCalendar;
            permissions.FolderId = folderId;
            permissions.IsPageAdmin = isPageAdmin;
            return permissions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionsId
        {
            get
            {
                return _PermissionsId;
            }
            set
            {
                if (_PermissionsId != value)
                {
                    OnPermissionsIdChanging(value);
                    ReportPropertyChanging("PermissionsId");
                    _PermissionsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionsId");
                    OnPermissionsIdChanged();
                }
            }
        }
        private global::System.Int32 _PermissionsId;
        partial void OnPermissionsIdChanging(global::System.Int32 value);
        partial void OnPermissionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                OnUserRoleIdChanging(value);
                ReportPropertyChanging("UserRoleId");
                _UserRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRoleId");
                OnUserRoleIdChanged();
            }
        }
        private global::System.Int32 _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanReadContent
        {
            get
            {
                return _CanReadContent;
            }
            set
            {
                OnCanReadContentChanging(value);
                ReportPropertyChanging("CanReadContent");
                _CanReadContent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanReadContent");
                OnCanReadContentChanged();
            }
        }
        private global::System.Boolean _CanReadContent;
        partial void OnCanReadContentChanging(global::System.Boolean value);
        partial void OnCanReadContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddContent
        {
            get
            {
                return _CanAddContent;
            }
            set
            {
                OnCanAddContentChanging(value);
                ReportPropertyChanging("CanAddContent");
                _CanAddContent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanAddContent");
                OnCanAddContentChanged();
            }
        }
        private global::System.Boolean _CanAddContent;
        partial void OnCanAddContentChanging(global::System.Boolean value);
        partial void OnCanAddContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanDeleteContent
        {
            get
            {
                return _CanDeleteContent;
            }
            set
            {
                OnCanDeleteContentChanging(value);
                ReportPropertyChanging("CanDeleteContent");
                _CanDeleteContent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanDeleteContent");
                OnCanDeleteContentChanged();
            }
        }
        private global::System.Boolean _CanDeleteContent;
        partial void OnCanDeleteContentChanging(global::System.Boolean value);
        partial void OnCanDeleteContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanReadMenus
        {
            get
            {
                return _CanReadMenus;
            }
            set
            {
                OnCanReadMenusChanging(value);
                ReportPropertyChanging("CanReadMenus");
                _CanReadMenus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanReadMenus");
                OnCanReadMenusChanged();
            }
        }
        private global::System.Boolean _CanReadMenus;
        partial void OnCanReadMenusChanging(global::System.Boolean value);
        partial void OnCanReadMenusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddMenus
        {
            get
            {
                return _CanAddMenus;
            }
            set
            {
                OnCanAddMenusChanging(value);
                ReportPropertyChanging("CanAddMenus");
                _CanAddMenus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanAddMenus");
                OnCanAddMenusChanged();
            }
        }
        private global::System.Boolean _CanAddMenus;
        partial void OnCanAddMenusChanging(global::System.Boolean value);
        partial void OnCanAddMenusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanDeleteMenus
        {
            get
            {
                return _CanDeleteMenus;
            }
            set
            {
                OnCanDeleteMenusChanging(value);
                ReportPropertyChanging("CanDeleteMenus");
                _CanDeleteMenus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanDeleteMenus");
                OnCanDeleteMenusChanged();
            }
        }
        private global::System.Boolean _CanDeleteMenus;
        partial void OnCanDeleteMenusChanging(global::System.Boolean value);
        partial void OnCanDeleteMenusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanReadFolders
        {
            get
            {
                return _CanReadFolders;
            }
            set
            {
                OnCanReadFoldersChanging(value);
                ReportPropertyChanging("CanReadFolders");
                _CanReadFolders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanReadFolders");
                OnCanReadFoldersChanged();
            }
        }
        private global::System.Boolean _CanReadFolders;
        partial void OnCanReadFoldersChanging(global::System.Boolean value);
        partial void OnCanReadFoldersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddFolders
        {
            get
            {
                return _CanAddFolders;
            }
            set
            {
                OnCanAddFoldersChanging(value);
                ReportPropertyChanging("CanAddFolders");
                _CanAddFolders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanAddFolders");
                OnCanAddFoldersChanged();
            }
        }
        private global::System.Boolean _CanAddFolders;
        partial void OnCanAddFoldersChanging(global::System.Boolean value);
        partial void OnCanAddFoldersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanDeleteFoldres
        {
            get
            {
                return _CanDeleteFoldres;
            }
            set
            {
                OnCanDeleteFoldresChanging(value);
                ReportPropertyChanging("CanDeleteFoldres");
                _CanDeleteFoldres = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanDeleteFoldres");
                OnCanDeleteFoldresChanged();
            }
        }
        private global::System.Boolean _CanDeleteFoldres;
        partial void OnCanDeleteFoldresChanging(global::System.Boolean value);
        partial void OnCanDeleteFoldresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanReadCalendars
        {
            get
            {
                return _CanReadCalendars;
            }
            set
            {
                OnCanReadCalendarsChanging(value);
                ReportPropertyChanging("CanReadCalendars");
                _CanReadCalendars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanReadCalendars");
                OnCanReadCalendarsChanged();
            }
        }
        private global::System.Boolean _CanReadCalendars;
        partial void OnCanReadCalendarsChanging(global::System.Boolean value);
        partial void OnCanReadCalendarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddCalendars
        {
            get
            {
                return _CanAddCalendars;
            }
            set
            {
                OnCanAddCalendarsChanging(value);
                ReportPropertyChanging("CanAddCalendars");
                _CanAddCalendars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanAddCalendars");
                OnCanAddCalendarsChanged();
            }
        }
        private global::System.Boolean _CanAddCalendars;
        partial void OnCanAddCalendarsChanging(global::System.Boolean value);
        partial void OnCanAddCalendarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanDeleteCalednars
        {
            get
            {
                return _CanDeleteCalednars;
            }
            set
            {
                OnCanDeleteCalednarsChanging(value);
                ReportPropertyChanging("CanDeleteCalednars");
                _CanDeleteCalednars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanDeleteCalednars");
                OnCanDeleteCalednarsChanged();
            }
        }
        private global::System.Boolean _CanDeleteCalednars;
        partial void OnCanDeleteCalednarsChanging(global::System.Boolean value);
        partial void OnCanDeleteCalednarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditContent
        {
            get
            {
                return _CanEditContent;
            }
            set
            {
                OnCanEditContentChanging(value);
                ReportPropertyChanging("CanEditContent");
                _CanEditContent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanEditContent");
                OnCanEditContentChanged();
            }
        }
        private global::System.Boolean _CanEditContent;
        partial void OnCanEditContentChanging(global::System.Boolean value);
        partial void OnCanEditContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditMenus
        {
            get
            {
                return _CanEditMenus;
            }
            set
            {
                OnCanEditMenusChanging(value);
                ReportPropertyChanging("CanEditMenus");
                _CanEditMenus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanEditMenus");
                OnCanEditMenusChanged();
            }
        }
        private global::System.Boolean _CanEditMenus;
        partial void OnCanEditMenusChanging(global::System.Boolean value);
        partial void OnCanEditMenusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditFolder
        {
            get
            {
                return _CanEditFolder;
            }
            set
            {
                OnCanEditFolderChanging(value);
                ReportPropertyChanging("CanEditFolder");
                _CanEditFolder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanEditFolder");
                OnCanEditFolderChanged();
            }
        }
        private global::System.Boolean _CanEditFolder;
        partial void OnCanEditFolderChanging(global::System.Boolean value);
        partial void OnCanEditFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditCalendar
        {
            get
            {
                return _CanEditCalendar;
            }
            set
            {
                OnCanEditCalendarChanging(value);
                ReportPropertyChanging("CanEditCalendar");
                _CanEditCalendar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanEditCalendar");
                OnCanEditCalendarChanged();
            }
        }
        private global::System.Boolean _CanEditCalendar;
        partial void OnCanEditCalendarChanging(global::System.Boolean value);
        partial void OnCanEditCalendarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPageAdmin
        {
            get
            {
                return _IsPageAdmin;
            }
            set
            {
                OnIsPageAdminChanging(value);
                ReportPropertyChanging("IsPageAdmin");
                _IsPageAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPageAdmin");
                OnIsPageAdminChanged();
            }
        }
        private global::System.Boolean _IsPageAdmin;
        partial void OnIsPageAdminChanging(global::System.Boolean value);
        partial void OnIsPageAdminChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PermissionsUserRoles", "UserRoles")]
        public UserRoles UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.PermissionsUserRoles", "UserRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.PermissionsUserRoles", "UserRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRoles> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.PermissionsUserRoles", "UserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRoles>("DataObjects.PermissionsUserRoles", "UserRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PermissionsFolders", "Folders")]
        public Folders Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.PermissionsFolders", "Folders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.PermissionsFolders", "Folders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folders> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folders>("DataObjects.PermissionsFolders", "Folders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folders>("DataObjects.PermissionsFolders", "Folders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="TemplateElement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateElement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateElement object.
        /// </summary>
        /// <param name="templateElementId">Initial value of the TemplateElementId property.</param>
        /// <param name="xsltId">Initial value of the XsltId property.</param>
        /// <param name="templateId">Initial value of the TemplateId property.</param>
        /// <param name="templateElementTypeId">Initial value of the TemplateElementTypeId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static TemplateElement CreateTemplateElement(global::System.Int32 templateElementId, global::System.Guid xsltId, global::System.Int32 templateId, global::System.Int32 templateElementTypeId, global::System.String title, global::System.String description)
        {
            TemplateElement templateElement = new TemplateElement();
            templateElement.TemplateElementId = templateElementId;
            templateElement.XsltId = xsltId;
            templateElement.TemplateId = templateId;
            templateElement.TemplateElementTypeId = templateElementTypeId;
            templateElement.Title = title;
            templateElement.Description = description;
            return templateElement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateElementId
        {
            get
            {
                return _TemplateElementId;
            }
            set
            {
                if (_TemplateElementId != value)
                {
                    OnTemplateElementIdChanging(value);
                    ReportPropertyChanging("TemplateElementId");
                    _TemplateElementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateElementId");
                    OnTemplateElementIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateElementId;
        partial void OnTemplateElementIdChanging(global::System.Int32 value);
        partial void OnTemplateElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XsltId
        {
            get
            {
                return _XsltId;
            }
            set
            {
                OnXsltIdChanging(value);
                ReportPropertyChanging("XsltId");
                _XsltId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XsltId");
                OnXsltIdChanged();
            }
        }
        private global::System.Guid _XsltId;
        partial void OnXsltIdChanging(global::System.Guid value);
        partial void OnXsltIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private global::System.Int32 _TemplateId;
        partial void OnTemplateIdChanging(global::System.Int32 value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateElementTypeId
        {
            get
            {
                return _TemplateElementTypeId;
            }
            set
            {
                OnTemplateElementTypeIdChanging(value);
                ReportPropertyChanging("TemplateElementTypeId");
                _TemplateElementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateElementTypeId");
                OnTemplateElementTypeIdChanged();
            }
        }
        private global::System.Int32 _TemplateElementTypeId;
        partial void OnTemplateElementTypeIdChanging(global::System.Int32 value);
        partial void OnTemplateElementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AdminElementAdminPages", "AdminPages")]
        public Templates Page
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.AdminElementAdminPages", "AdminPages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.AdminElementAdminPages", "AdminPages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Templates> PageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Templates>("DataObjects.AdminElementAdminPages", "AdminPages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Templates>("DataObjects.AdminElementAdminPages", "AdminPages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AdminElementAttributesAdminElement", "AdminElementAttributes")]
        public EntityCollection<TemplateElementAttributes> PageElementAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateElementAttributes>("DataObjects.AdminElementAttributesAdminElement", "AdminElementAttributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateElementAttributes>("DataObjects.AdminElementAttributesAdminElement", "AdminElementAttributes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="TemplateElementAttributes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateElementAttributes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateElementAttributes object.
        /// </summary>
        /// <param name="templateElementAttributesId">Initial value of the TemplateElementAttributesId property.</param>
        /// <param name="objectName">Initial value of the ObjectName property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="dynamicParam">Initial value of the DynamicParam property.</param>
        /// <param name="templateElementId">Initial value of the TemplateElementId property.</param>
        /// <param name="templateElementTypeId">Initial value of the TemplateElementTypeId property.</param>
        public static TemplateElementAttributes CreateTemplateElementAttributes(global::System.Int32 templateElementAttributesId, global::System.String objectName, global::System.String objectId, global::System.String dynamicParam, global::System.String templateElementId, global::System.Int32 templateElementTypeId)
        {
            TemplateElementAttributes templateElementAttributes = new TemplateElementAttributes();
            templateElementAttributes.TemplateElementAttributesId = templateElementAttributesId;
            templateElementAttributes.ObjectName = objectName;
            templateElementAttributes.ObjectId = objectId;
            templateElementAttributes.DynamicParam = dynamicParam;
            templateElementAttributes.TemplateElementId = templateElementId;
            templateElementAttributes.TemplateElementTypeId = templateElementTypeId;
            return templateElementAttributes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateElementAttributesId
        {
            get
            {
                return _TemplateElementAttributesId;
            }
            set
            {
                if (_TemplateElementAttributesId != value)
                {
                    OnTemplateElementAttributesIdChanging(value);
                    ReportPropertyChanging("TemplateElementAttributesId");
                    _TemplateElementAttributesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateElementAttributesId");
                    OnTemplateElementAttributesIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateElementAttributesId;
        partial void OnTemplateElementAttributesIdChanging(global::System.Int32 value);
        partial void OnTemplateElementAttributesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.String _ObjectId;
        partial void OnObjectIdChanging(global::System.String value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DynamicParam
        {
            get
            {
                return _DynamicParam;
            }
            set
            {
                OnDynamicParamChanging(value);
                ReportPropertyChanging("DynamicParam");
                _DynamicParam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DynamicParam");
                OnDynamicParamChanged();
            }
        }
        private global::System.String _DynamicParam;
        partial void OnDynamicParamChanging(global::System.String value);
        partial void OnDynamicParamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateElementId
        {
            get
            {
                return _TemplateElementId;
            }
            set
            {
                OnTemplateElementIdChanging(value);
                ReportPropertyChanging("TemplateElementId");
                _TemplateElementId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateElementId");
                OnTemplateElementIdChanged();
            }
        }
        private global::System.String _TemplateElementId;
        partial void OnTemplateElementIdChanging(global::System.String value);
        partial void OnTemplateElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateElementTypeId
        {
            get
            {
                return _TemplateElementTypeId;
            }
            set
            {
                OnTemplateElementTypeIdChanging(value);
                ReportPropertyChanging("TemplateElementTypeId");
                _TemplateElementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateElementTypeId");
                OnTemplateElementTypeIdChanged();
            }
        }
        private global::System.Int32 _TemplateElementTypeId;
        partial void OnTemplateElementTypeIdChanging(global::System.Int32 value);
        partial void OnTemplateElementTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AdminElementAttributesAdminElement", "AdminElement")]
        public TemplateElement PageElement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElement>("DataObjects.AdminElementAttributesAdminElement", "AdminElement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElement>("DataObjects.AdminElementAttributesAdminElement", "AdminElement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TemplateElement> PageElementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElement>("DataObjects.AdminElementAttributesAdminElement", "AdminElement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TemplateElement>("DataObjects.AdminElementAttributesAdminElement", "AdminElement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes")]
        public TemplateElementTypes TemplateElementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElementTypes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElementTypes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TemplateElementTypes> TemplateElementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateElementTypes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TemplateElementTypes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="TemplateElementTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateElementTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateElementTypes object.
        /// </summary>
        /// <param name="templateElementTypeId">Initial value of the TemplateElementTypeId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static TemplateElementTypes CreateTemplateElementTypes(global::System.Int32 templateElementTypeId, global::System.String type)
        {
            TemplateElementTypes templateElementTypes = new TemplateElementTypes();
            templateElementTypes.TemplateElementTypeId = templateElementTypeId;
            templateElementTypes.Type = type;
            return templateElementTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateElementTypeId
        {
            get
            {
                return _TemplateElementTypeId;
            }
            set
            {
                if (_TemplateElementTypeId != value)
                {
                    OnTemplateElementTypeIdChanging(value);
                    ReportPropertyChanging("TemplateElementTypeId");
                    _TemplateElementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateElementTypeId");
                    OnTemplateElementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateElementTypeId;
        partial void OnTemplateElementTypeIdChanging(global::System.Int32 value);
        partial void OnTemplateElementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "TemplateElementTypesTemplateElementAttributes", "TemplateElementAttributes")]
        public EntityCollection<TemplateElementAttributes> TemplateElementAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateElementAttributes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementAttributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateElementAttributes>("DataObjects.TemplateElementTypesTemplateElementAttributes", "TemplateElementAttributes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Templates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Templates : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Templates object.
        /// </summary>
        /// <param name="templateId">Initial value of the TemplateId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isUserDefined">Initial value of the IsUserDefined property.</param>
        /// <param name="templateFileUrl">Initial value of the TemplateFileUrl property.</param>
        public static Templates CreateTemplates(global::System.Int32 templateId, global::System.String title, global::System.Boolean isUserDefined, global::System.String templateFileUrl)
        {
            Templates templates = new Templates();
            templates.TemplateId = templateId;
            templates.Title = title;
            templates.IsUserDefined = isUserDefined;
            templates.TemplateFileUrl = templateFileUrl;
            return templates;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                if (_TemplateId != value)
                {
                    OnTemplateIdChanging(value);
                    ReportPropertyChanging("TemplateId");
                    _TemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateId");
                    OnTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateId;
        partial void OnTemplateIdChanging(global::System.Int32 value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUserDefined
        {
            get
            {
                return _IsUserDefined;
            }
            set
            {
                OnIsUserDefinedChanging(value);
                ReportPropertyChanging("IsUserDefined");
                _IsUserDefined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserDefined");
                OnIsUserDefinedChanged();
            }
        }
        private global::System.Boolean _IsUserDefined;
        partial void OnIsUserDefinedChanging(global::System.Boolean value);
        partial void OnIsUserDefinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateFileUrl
        {
            get
            {
                return _TemplateFileUrl;
            }
            set
            {
                OnTemplateFileUrlChanging(value);
                ReportPropertyChanging("TemplateFileUrl");
                _TemplateFileUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateFileUrl");
                OnTemplateFileUrlChanged();
            }
        }
        private global::System.String _TemplateFileUrl;
        partial void OnTemplateFileUrlChanging(global::System.String value);
        partial void OnTemplateFileUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "AdminElementAdminPages", "AdminElement")]
        public EntityCollection<TemplateElement> PageElements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateElement>("DataObjects.AdminElementAdminPages", "AdminElement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateElement>("DataObjects.AdminElementAdminPages", "AdminElement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PagesAliases", "Aliases")]
        public EntityCollection<Aliases> Aliases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Aliases>("DataObjects.PagesAliases", "Aliases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Aliases>("DataObjects.PagesAliases", "Aliases", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="UserRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRoles object.
        /// </summary>
        /// <param name="userRoleId">Initial value of the UserRoleId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static UserRoles CreateUserRoles(global::System.Int32 userRoleId, global::System.String description)
        {
            UserRoles userRoles = new UserRoles();
            userRoles.UserRoleId = userRoleId;
            userRoles.Description = description;
            return userRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                if (_UserRoleId != value)
                {
                    OnUserRoleIdChanging(value);
                    ReportPropertyChanging("UserRoleId");
                    _UserRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleId");
                    OnUserRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersToUserRolesUserRoles", "UsersToUserRoles")]
        public EntityCollection<UsersToUserRoles> UsersToUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersToUserRoles>("DataObjects.UsersToUserRolesUserRoles", "UsersToUserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersToUserRoles>("DataObjects.UsersToUserRolesUserRoles", "UsersToUserRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "PermissionsUserRoles", "Permissions")]
        public EntityCollection<Permissions> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permissions>("DataObjects.PermissionsUserRoles", "Permissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permissions>("DataObjects.PermissionsUserRoles", "Permissions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static Users CreateUsers(global::System.Int32 userId, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String password, global::System.Int32 languageId)
        {
            Users users = new Users();
            users.UserId = userId;
            users.FirstName = firstName;
            users.LastName = lastName;
            users.UserName = userName;
            users.Password = password;
            users.LanguageId = languageId;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            internal set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersContentItems", "ContentItems")]
        public EntityCollection<ContentItems> ItemsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItems>("DataObjects.UsersContentItems", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItems>("DataObjects.UsersContentItems", "ContentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersContentItems1", "ContentItems")]
        public EntityCollection<ContentItems> ItemsModified
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentItems>("DataObjects.UsersContentItems1", "ContentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentItems>("DataObjects.UsersContentItems1", "ContentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersToUserRolesUsers", "UsersToUserRoles")]
        public EntityCollection<UsersToUserRoles> UsersToUserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersToUserRoles>("DataObjects.UsersToUserRolesUsers", "UsersToUserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersToUserRoles>("DataObjects.UsersToUserRolesUsers", "UsersToUserRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "LanguagesUsers", "Languages")]
        public Languages Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesUsers", "Languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesUsers", "Languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Languages> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("DataObjects.LanguagesUsers", "Languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Languages>("DataObjects.LanguagesUsers", "Languages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "ContentHistoryUsers", "ContentHistory")]
        public EntityCollection<ContentHistory> ContentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentHistory>("DataObjects.ContentHistoryUsers", "ContentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentHistory>("DataObjects.ContentHistoryUsers", "ContentHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataObjects", Name="UsersToUserRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersToUserRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersToUserRoles object.
        /// </summary>
        /// <param name="userToUserRoleId">Initial value of the UserToUserRoleId property.</param>
        /// <param name="userRoleId">Initial value of the UserRoleId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UsersToUserRoles CreateUsersToUserRoles(global::System.Int32 userToUserRoleId, global::System.Int32 userRoleId, global::System.Int32 userId)
        {
            UsersToUserRoles usersToUserRoles = new UsersToUserRoles();
            usersToUserRoles.UserToUserRoleId = userToUserRoleId;
            usersToUserRoles.UserRoleId = userRoleId;
            usersToUserRoles.UserId = userId;
            return usersToUserRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserToUserRoleId
        {
            get
            {
                return _UserToUserRoleId;
            }
            internal set
            {
                if (_UserToUserRoleId != value)
                {
                    OnUserToUserRoleIdChanging(value);
                    ReportPropertyChanging("UserToUserRoleId");
                    _UserToUserRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserToUserRoleId");
                    OnUserToUserRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _UserToUserRoleId;
        partial void OnUserToUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserToUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                OnUserRoleIdChanging(value);
                ReportPropertyChanging("UserRoleId");
                _UserRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRoleId");
                OnUserRoleIdChanged();
            }
        }
        private global::System.Int32 _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersToUserRolesUsers", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersToUserRolesUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersToUserRolesUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DataObjects.UsersToUserRolesUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DataObjects.UsersToUserRolesUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataObjects", "UsersToUserRolesUserRoles", "UserRoles")]
        public UserRoles UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.UsersToUserRolesUserRoles", "UserRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.UsersToUserRolesUserRoles", "UserRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRoles> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("DataObjects.UsersToUserRolesUserRoles", "UserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRoles>("DataObjects.UsersToUserRolesUserRoles", "UserRoles", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DataObjects", Name="XmlColumn")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class XmlColumn : ComplexObject
    {
    }

    #endregion
    
}
